/* Automatically generated nanopb header */
/* Generated by nanopb-0.3.9.2 at Tue Feb 19 20:55:37 2019. */

#ifndef PB_MESSAGES_PB_H_INCLUDED
#define PB_MESSAGES_PB_H_INCLUDED
#include <pb.h>

/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Struct definitions */
typedef struct _Report {
    int32_t nodeId;
    bool has_sensorType;
    int32_t sensorType;
    bool has_value;
    float value;
/* @@protoc_insertion_point(struct:Report) */
} Report;

/* Default values for struct fields */

/* Initializer values for message structs */
#define Report_init_default                      {0, false, 0, false, 0}
#define Report_init_zero                         {0, false, 0, false, 0}

/* Field tags (for use in manual encoding/decoding) */
#define Report_nodeId_tag                        1
#define Report_sensorType_tag                    2
#define Report_value_tag                         3

/* Struct field encoding specification for nanopb */
extern const pb_field_t Report_fields[4];

/* Maximum encoded size of messages (where known) */
#define Report_size                              27

/* Message IDs (where set with "msgid" option) */
#ifdef PB_MSGID

#define MESSAGES_MESSAGES \


#endif

#ifdef __cplusplus
} /* extern "C" */
#endif
/* @@protoc_insertion_point(eof) */

#endif
